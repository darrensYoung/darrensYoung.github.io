<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kingzongyang&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-08T16:31:33.242Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kingzongyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/10/09/%E6%89%8B%E6%9C%BA%E7%AB%AF1%E5%83%8F%E7%B4%A0%E8%BE%B9%E6%A1%86/"/>
    <id>http://yoursite.com/2018/10/09/手机端1像素边框/</id>
    <published>2018-10-08T16:31:50.042Z</published>
    <updated>2018-10-08T16:31:33.242Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="手机端1像素的边框问题解决方案"><a href="#手机端1像素的边框问题解决方案" class="headerlink" title="手机端1像素的边框问题解决方案"></a>手机端1像素的边框问题解决方案</h2></blockquote><p></p><p>在我们去做手机端的时候，会在手机端中出现当你去使用boreder-top或者left、right，bottom，的使用在一些浏览器中会出现1像素的问题，因为我们的css是像素，而手机屏幕是物理像素，它们的关系是1:2的关系，所以就会到时你看的时候会多出了一个像素，为了样式的严谨性，所以需要引入一个css的样式去解决这个问题。</p><p></p><p></p><p>border.css 文件 ，我们只要引入这个文件就可以快速的解决这个问题，可能有很多同学都有不会注意到这个东西，但是如果看到这篇文章的话，希望可以让你们注意到，这种严谨的作风，可能会让你在工作中如鱼得水。</p><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;手机端1像素的边框问题解决方案&quot;&gt;&lt;a href=&quot;#手机端1像素的边框问题解决方案&quot; class=&quot;headerlink&quot; title=&quot;手机端1像素的边框问题解决方案&quot;&gt;&lt;/a&gt;手机端1像素的边框问题解决方案&lt;/h2&gt;&lt;/blockq
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/10/09/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2018/10/09/微信小程序支付开发/</id>
    <published>2018-10-08T16:17:22.653Z</published>
    <updated>2018-10-08T16:16:01.893Z</updated>
    
    <content type="html"><![CDATA[<p>第一次做微信支付，不做不知道，去网上找资料，通过问同事才写下这篇博客</p><h2 id="关键的文档"><a href="#关键的文档" class="headerlink" title="关键的文档"></a>关键的文档</h2><p>微信小程序开发步骤：<a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_3&amp;index=1" rel="noopener" target="_blank">https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_3&amp;index=1</a><br></p><br><p>微信小程序API:<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-pay.html#wxrequestpaymentobject" rel="noopener" target="_blank">https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-pay.html#wxrequestpaymentobject</a></p><br><p>微信小程序业务流程：<a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_4&amp;index=2" rel="noopener" target="_blank">https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_4&amp;index=2</a><br></p><br><p>微信小程序统一下单：<a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=9_1" rel="noopener" target="_blank">https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=9_1</a><br></p><br><p>微信小程序签名生成算法：<a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=4_3" rel="noopener" target="_blank">https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=4_3</a><br></p><br><p>微信小程序签名校验：&lt;a href=”<a href="https://pay.weixin.qq.com/w程序签名校验：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=20_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/w程序签名校验：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=20_1</a> <br></p><h2 id="小程序开发步骤"><a href="#小程序开发步骤" class="headerlink" title="小程序开发步骤"></a>小程序开发步骤</h2><p><img src="https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E5%BC%80%E5%8F%91/20161230122010273.png" alt=""></p><blockquote><h5 id="wx-login调用接口获取登录凭证（code）"><a href="#wx-login调用接口获取登录凭证（code）" class="headerlink" title="wx.login调用接口获取登录凭证（code）"></a>wx.login调用接口获取登录凭证（code）</h5></blockquote><blockquote><h5 id="code-换取用户的唯一标识（openid）"><a href="#code-换取用户的唯一标识（openid）" class="headerlink" title="code 换取用户的唯一标识（openid）"></a>code 换取用户的唯一标识（openid）</h5></blockquote><p><img src="https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E5%BC%80%E5%8F%91/%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E5%92%8C%E5%9C%B0%E5%9D%80.png" alt=""></p><blockquote><h5 id="统一下单"><a href="#统一下单" class="headerlink" title="统一下单"></a>统一下单</h5></blockquote><ul><li>URL地址：<a href="https://api.mch.weixin.qq.com/pay/unifiedorder" target="_blank" rel="noopener">https://api.mch.weixin.qq.com/pay/unifiedorder</a></li><li>post</li><li>参数为XML</li></ul><blockquote><h5 id="wx-requestPayment进行支付"><a href="#wx-requestPayment进行支付" class="headerlink" title="wx.requestPayment进行支付"></a>wx.requestPayment进行支付</h5></blockquote><p><img src="https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E5%BC%80%E5%8F%91/%E6%94%AF%E4%BB%98.png" alt=""></p><h3 id="采坑："><a href="#采坑：" class="headerlink" title="采坑："></a>采坑：</h3><ol><li>签名MD5加密，网上有些算法是错误的，自己写完还需要在线MD5加密工具进行校验（我采坑一下午，怎么看我写的怎么对，就是出不来，原因就是MD5工具使用错误，坑爹）</li><li>签名规则注意事项（must）<br> ◆ 参数名ASCII码从小到大排序（字典序）；<br> ◆ 如果参数的值为空不参与签名；<br> ◆ 参数名区分大小写；<br> ◆ 验证调用返回或微信主动通知签名时，传送的sign参数不参与签名，将生成的签名与该sign值作校验。<br> ◆ 微信接口可能增加字段，验证签名时必须支持增加的扩展字段</li><li>统一下单签名appid，wx.requestPayment签名appId（大小写必须区分，真是找瞎我钛合金狗眼）</li><li>wx.requestPayment中package参数必须是package:”prepay_id=wx21<strong><strong><strong>**</strong></strong></strong>“，不然，会出现调用支付JSAPI缺少appid/total_fee</li><li>total_fee为分，并且是int</li><li>生成随机数和时间戳一定要保证签名与上传参数一致</li><li>大小写。。一定要注意</li><li>微信小程序trade_type=JSAPI，openid参数必传</li><li>wx.requestPayment生成签名有appId，请求的时候没有appId</li></ol><h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><pre><code>/* 微信支付 */</code></pre><p>  wxpay: function () {<br>    var that = this<br>    //登陆获取code<br>    wx.login({<br>      success: function (res) {<br>        console.log(res.code)<br>        //获取openid<br>        that.getOpenId(res.code)<br>      }<br>    });<br>  },</p><p>  /<em> 获取openId </em>/<br>  getOpenId: function (code) {<br>    var that = this<br>    wx.request({<br>      url: “<a href="https://api.weixin.qq.com/sns/jscode2session?appid=wxbd5a8270399d41d9&amp;secret=d8aac26a5a9c16266d1a23851ebb7d9b&amp;js_code=&quot;" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/jscode2session?appid=wxbd5a8270399d41d9&amp;secret=d8aac26a5a9c16266d1a23851ebb7d9b&amp;js_code=&quot;</a> + code + “&amp;grant_type=authorization_code”,<br>      method: ‘GET’,<br>      success: function (res) {<br>        //统一支付签名<br>        var appid = ‘’;//appid<br>        var body = ‘’;//商户名<br>        var mch_id = ‘’;//商户号<br>        var nonce_str = that.randomString;//随机字符串，不长于32位。<br>        var notify_url = ‘’;//通知地址<br>        var spbill_create_ip = ‘’;//ip<br>        // var total_fee = parseInt(that.data.wxPayMoney) * 100;<br>        var total_fee = 100;<br>        var trade_type = “JSAPI”;<br>        var key = ‘’;<br>        var unifiedPayment = ‘appid=’ + appid + ‘&amp;body=’ + body + ‘&amp;mch_id=’ + mch_id + ‘&amp;nonce_str=’ + nonce_str + ‘¬ify_url=’ + notify_url + ‘&amp;openid=’ + res.data.openid + ‘&amp;out_trade_no=’ + that.data.paySn + ‘&amp;spbill_create_ip=’ + spbill_create_ip + ‘&amp;total_fee=’ + total_fee + ‘&amp;trade_type=’ + trade_type + ‘&amp;key=’ + key<br>        var sign = MD5.MD5(unifiedPayment).toUpperCase()<br>        console.log(sign)</p><pre><code>    //封装统一支付xml参数    var formData = &quot;&lt;xml&gt;&quot;    formData += &quot;&lt;appid&gt;&quot; + appid + &quot;&lt;/appid&gt;&quot;    formData += &quot;&lt;body&gt;&quot; + body + &quot;&lt;/body&gt;&quot;    formData += &quot;&lt;mch_id&gt;&quot; + mch_id + &quot;&lt;/mch_id&gt;&quot;    formData += &quot;&lt;nonce_str&gt;&quot; + nonce_str + &quot;&lt;/nonce_str&gt;&quot;    formData += &quot;&lt;notify_url&gt;&quot; + notify_url + &quot;&lt;/notify_url&gt;&quot;    formData += &quot;&lt;openid&gt;&quot; + res.data.openid + &quot;&lt;/openid&gt;&quot;    formData += &quot;&lt;out_trade_no&gt;&quot; + that.data.paySn + &quot;&lt;/out_trade_no&gt;&quot;    formData += &quot;&lt;spbill_create_ip&gt;&quot; + spbill_create_ip + &quot;&lt;/spbill_create_ip&gt;&quot;    formData += &quot;&lt;total_fee&gt;&quot; + total_fee + &quot;&lt;/total_fee&gt;&quot;    formData += &quot;&lt;trade_type&gt;&quot; + trade_type + &quot;&lt;/trade_type&gt;&quot;    formData += &quot;&lt;sign&gt;&quot; + sign + &quot;&lt;/sign&gt;&quot;    formData += &quot;&lt;/xml&gt;&quot;    //统一支付    wx.request({      url: &apos;https://api.mch.weixin.qq.com/pay/unifiedorder&apos;,      method: &apos;POST&apos;,      head: &apos;application/x-www-form-urlencoded&apos;,      data: formData, // 设置请求的 header      success: function (res) {        console.log(res.data)        var result_code = that.getXMLNodeValue(&apos;result_code&apos;, res.data.toString(&quot;utf-8&quot;))        var resultCode = result_code.split(&apos;[&apos;)[2].split(&apos;]&apos;)[0]        if (resultCode == &apos;FAIL&apos;) {          var err_code_des = that.getXMLNodeValue(&apos;err_code_des&apos;, res.data.toString(&quot;utf-8&quot;))          var errDes = err_code_des.split(&apos;[&apos;)[2].split(&apos;]&apos;)[0]          wx.navigateBack({            delta: 1, // 回退前 delta(默认为1) 页面            success: function (res) {              wx.showToast({                title: errDes,                icon: &apos;success&apos;,                duration: 2000              })            },          })        } else {          //发起支付          var prepay_id = that.getXMLNodeValue(&apos;prepay_id&apos;, res.data.toString(&quot;utf-8&quot;))          var tmp = prepay_id.split(&apos;[&apos;)          var tmp1 = tmp[2].split(&apos;]&apos;)          //签名            var key = &apos;&apos;;          var appId = &apos;&apos;;          var timeStamp = that.createTimeStamp();          var nonceStr = that.randomString();          var stringSignTemp = &quot;appId=&amp;nonceStr=&quot; + nonceStr + &quot;&amp;package=prepay_id=&quot; + tmp1[0] + &quot;&amp;signType=MD5&amp;timeStamp=&quot; + timeStamp + &quot;&amp;key=&quot;          var sign = MD5.MD5(stringSignTemp).toUpperCase()          console.log(sign)          var param = { &quot;timeStamp&quot;: timeStamp, &quot;package&quot;: &apos;prepay_id=&apos; + tmp1[0], &quot;paySign&quot;: sign, &quot;signType&quot;: &quot;MD5&quot;, &quot;nonceStr&quot;: nonceStr }          that.pay(param)        }      },    })  },  fail: function () {    // fail  },  complete: function () {    // complete  }})</code></pre><p>  },<br>  /<em> 随机数 </em>/<br>  randomString: function () {<br>    var chars = ‘ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678’;    /<strong><strong>默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1</strong></strong>/<br>    var maxPos = chars.length;<br>    var pwd = ‘’;<br>    for (var i = 0; i &lt; 32; i++) {<br>      pwd += chars.charAt(Math.floor(Math.random() <em> maxPos));<br>    }<br>    return pwd;<br>  },<br>  /</em> 获取prepay_id */<br>  getXMLNodeValue: function (node_name, xml) {<br>    var tmp = xml.split(“&lt;” + node_name + “&gt;”)<br>    var _tmp = tmp[1].split(“&lt;/“ + node_name + “&gt;”)<br>    return _tmp[0]<br>  },</p><p>  /<em> 时间戳产生函数   </em>/<br>  createTimeStamp: function () {<br>    return parseInt(new Date().getTime() / 1000) + ‘’<br>  },<br>  /<em> 支付   </em>/<br>  pay: function (param) {<br>    wx.requestPayment({<br>      timeStamp: param.timeStamp,<br>      nonceStr: param.nonceStr,<br>      package: param.package,<br>      signType: param.signType,<br>      paySign: param.paySign,<br>      success: function (res) {<br>        // success<br>        console.log(res)<br>        wx.navigateBack({<br>          delta: 1, // 回退前 delta(默认为1) 页面<br>          success: function (res) {<br>            wx.showToast({<br>              title: ‘支付成功’,<br>              icon: ‘success’,<br>              duration: 2000<br>            })<br>          },<br>          fail: function () {<br>            // fail<br>          },<br>          complete: function () {<br>            // complete<br>          }<br>        })<br>      },<br>      fail: function () {<br>        // fail<br>        console.log(“支付失败”)<br>      },<br>      complete: function () {<br>        // complete<br>        console.log(“pay complete”)<br>      }<br>    })<br>  }</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第一次做微信支付，不做不知道，去网上找资料，通过问同事才写下这篇博客&lt;/p&gt;
&lt;h2 id=&quot;关键的文档&quot;&gt;&lt;a href=&quot;#关键的文档&quot; class=&quot;headerlink&quot; title=&quot;关键的文档&quot;&gt;&lt;/a&gt;关键的文档&lt;/h2&gt;&lt;p&gt;微信小程序开发步骤：&lt;a hre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/09/12/hexo+githubpages/"/>
    <id>http://yoursite.com/2018/09/12/hexo+githubpages/</id>
    <published>2018-09-12T12:56:37.696Z</published>
    <updated>2018-09-12T13:13:46.682Z</updated>
    
    <content type="html"><![CDATA[<h4 id="HEXO-GITHUB-博客搭建"><a href="#HEXO-GITHUB-博客搭建" class="headerlink" title="HEXO+GITHUB 博客搭建"></a>HEXO+GITHUB 博客搭建</h4><ul><li><p>安装Node.js和git配置好的node和git查下版本号，打开cmd命令行，成功界面如下：</p></li><li><p><img src="https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E7%8E%8B%E6%9E%9E%E9%98%B3Blog%E5%9B%BE%E7%89%87/%E9%85%8D%E7%BD%AEnode%E5%92%8Cgit.png" alt="通过cmd查版本"></p><p>​</p></li><li><p>​        <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">node.js下载地址</a></p><p>​        <a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">git下载地址</a></p><p>​</p></li><li><p>通过git窗口安装hexo(选择你在哪个盘里面安装)</p><ol><li>npm install hexo-cli -g</li><li>hexo init blog</li><li>cd blog</li><li>hexo server</li></ol></li><li><p>[^如果感觉慢就用淘宝镜像]: </p></li><li><p>​    装完后出现</p></li><li><p><img src="https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E7%8E%8B%E6%9E%9E%E9%98%B3Blog%E5%9B%BE%E7%89%87/%E5%BC%80%E5%90%AF%E6%9C%8D%E5%8A%A1.jpg" alt="开启服务图片"></p></li><li><p>出现这个页面就是成功了</p><p>​                      <img src="https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E7%8E%8B%E6%9E%9E%E9%98%B3Blog%E5%9B%BE%E7%89%87/%E6%98%BE%E7%A4%BA%E8%BF%99%E6%A0%B7%E6%88%90%E5%8A%9F.png" alt="显示成功"></p><p>​</p></li><li><p>Github账户注册和新建项目，项目必须要遵守格式：账户名.github.io(因为我的创建过了了，所以会出现警告)，不然接下来会有很多麻烦。并且需要勾选Initialize this repository with a README</p></li><li><p>![](<a href="https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E7%8E%8B%E6%9E%9E%E9%98%B3Blog%E5%9B%BE%E7%89%87/github%E6%96%B0%E5%BB%BA%E9%A1%B5%E9%9D%A2.jpg" target="_blank" rel="noopener">https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E7%8E%8B%E6%9E%9E%E9%98%B3Blog%E5%9B%BE%E7%89%87/github%E6%96%B0%E5%BB%BA%E9%A1%B5%E9%9D%A2.jpg</a></p></li><li><p>在建好的项目右侧有个settings按钮，点击它，向下拉到GitHub Pages，你会看到那边有个网址，访问它，你将会惊奇的发现该项目已经被部署到网络上，能够通过外网来访问它。</p></li><li><p>注意 ： 如果您的站点存储库没有<code>master</code>或没有<code>gh-pages</code>分支，则您的GitHub Pages发布源将设置为“ <strong>无”，</strong>并且您的站点不会发布。</p></li><li><p><img src="https://kingzongyang1996-1257473043.cos.ap-beijing.myqcloud.com/%E7%8E%8B%E6%9E%9E%E9%98%B3Blog%E5%9B%BE%E7%89%87/%E4%BB%8E%E9%A1%B9%E7%9B%AE%E8%AE%BE%E7%BD%AE%E4%B8%AD%E7%9C%8B.png" alt=""></p><p>​</p></li></ul><ul><li><p>生成秘钥具体步骤查看链接:</p></li><li><p><a href="https://help.github.com/articles/checking-for-existing-ssh-keys/" target="_blank" rel="noopener">https://help.github.com/articles/checking-for-existing-ssh-keys/</a></p></li><li><p>​</p></li><li><p>接下来就是在你的HEXO中去配置让它与你的githubpages连到一块儿去,配置<code>_config.yml</code>中有关deploy的部分：</p></li><li><p>deploy:</p></li><li><p>type: git<br>  repository: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:darrensYoung/darrensYoung.github.io.git<br>  branch: master</p></li><li><p>最后就可以通过你的gitpages的地址打开你的HEXO了</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;HEXO-GITHUB-博客搭建&quot;&gt;&lt;a href=&quot;#HEXO-GITHUB-博客搭建&quot; class=&quot;headerlink&quot; title=&quot;HEXO+GITHUB 博客搭建&quot;&gt;&lt;/a&gt;HEXO+GITHUB 博客搭建&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装Nod
      
    
    </summary>
    
    
  </entry>
  
</feed>
